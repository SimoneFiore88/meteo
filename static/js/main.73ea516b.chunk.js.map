{"version":3,"sources":["components/Main/Main.module.css","components/Loader/Loader.js","components/Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Loader","className","Main","props","console","log","data","getTime","Date","sunset","classes","cover","card","temp","feels_like","weather","description","toUpperCase","humidity","pressure","sunrise","getHours","getMinutes","App","useState","today","setToday","useEffect","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","fetch","then","response","json","current","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,qB,iJCDtC,SAASC,IACtB,OACE,qBAAKC,UAAW,gDAAhB,SACE,qBAAKA,UAAU,qEAAf,SACE,qBAAKA,UAAU,gB,oBCFR,SAASC,EAAKC,GAG3B,OAFAC,QAAQC,IAAIF,EAAMG,MAClBF,QAAQC,IAAIE,EAAQ,IAAIC,KAAyB,IAApBL,EAAMG,KAAKG,UAEtC,qBACER,UAAW,uCAAyCS,IAAQP,EAAMQ,OADpE,SAGE,sBAAKV,UAAU,2DAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAWS,IAAQE,KAAxB,UACE,oBAAGX,UAAU,wBAAb,UAAsCE,EAAMG,KAAKO,KAAjD,YACA,oBAAGZ,UAAU,mBAAb,wBACcE,EAAMG,KAAKQ,WADzB,YAGA,mBAAGb,UAAU,iBAAb,SACGE,EAAMG,KAAKS,QAAQ,GAAGC,YAAYC,gBAErC,0CAAad,EAAMG,KAAKY,SAAxB,QACA,0CAAaf,EAAMG,KAAKa,SAAxB,WACA,yCAAYZ,EAAQ,IAAIC,KAA0B,IAArBL,EAAMG,KAAKc,aACxC,wCAAWb,EAAQ,IAAIC,KAAyB,IAApBL,EAAMG,KAAKG,iBAG3C,qBAAKR,UAAU,qCAMvB,SAASM,EAAQD,GAKf,OAJYA,EAAKe,WAAa,GAAK,IAAMf,EAAKe,WAAaf,EAAKe,YAIjD,KAFbf,EAAKgB,aAAe,GAAK,IAAMhB,EAAKgB,aAAehB,EAAKgB,cCL7CC,MAxBf,WACE,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAfAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAACC,GACxC,IAAMC,EAAMD,EAASE,OAAOC,SACtBC,EAAMJ,EAASE,OAAOG,UAE5BC,MAAM,uDAAD,OACoDL,EADpD,gBAC+DG,EAD/D,yDAGFG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChC,GACLoB,EAASpB,EAAKmC,iBAGnB,IAGD,8BACGhB,EAAQ,cAACvB,EAAD,CAAMI,KAAMmB,EAAOd,MAAOc,EAAMV,QAAQ,GAAG2B,OAAW,cAAC1C,EAAD,OCZtD2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73ea516b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Clear\":\"Main_Clear__c_SFW\",\"card\":\"Main_card__aae9f\"};","export default function Loader() {\n  return (\n    <div className={\"container-fluid px-md-5 min-vh-100 bg-danger \"}>\n      <div className=\"row min-vh-100 align-items-center justify-content-center bg-danger\">\n        <div className=\"col-12 \"></div>\n      </div>\n    </div>\n  );\n}\n","import classes from \"./Main.module.css\";\n\nexport default function Main(props) {\n  console.log(props.data);\n  console.log(getTime(new Date(props.data.sunset * 1000)));\n  return (\n    <div\n      className={\"container-fluid px-md-5 min-vh-100  \" + classes[props.cover]}\n    >\n      <div className=\"row min-vh-100 align-items-center justify-content-center\">\n        <div className=\"col-12 col-md-6 px-5\">\n          <div className={classes.card}>\n            <p className=\"text-center display-3\">{props.data.temp} °C</p>\n            <p className=\"text-center lead\">\n              Feels like {props.data.feels_like} °C\n            </p>\n            <p className=\"text-center h3\">\n              {props.data.weather[0].description.toUpperCase()}\n            </p>\n            <p>Humidity {props.data.humidity} %</p>\n            <p>Pressure {props.data.pressure} mbar</p>\n            <p>Sunrise {getTime(new Date(props.data.sunrise * 1000))}</p>\n            <p>Sunset {getTime(new Date(props.data.sunset * 1000))}</p>\n          </div>\n        </div>\n        <div className=\"col-12 col-md-6 text-center\"></div>\n      </div>\n    </div>\n  );\n}\n\nfunction getTime(data) {\n  let hours = data.getHours() < 10 ? \"0\" + data.getHours() : data.getHours();\n  let minutes =\n    data.getMinutes() < 10 ? \"0\" + data.getMinutes() : data.getMinutes();\n\n  return hours + \":\" + minutes;\n}\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Loader from \"./components/Loader/Loader\";\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n  const [today, setToday] = useState();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n\n      fetch(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=a44dbe17d9702693257f7556d12dec32`,\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setToday(data.current);\n        });\n    });\n  }, []);\n\n  return (\n    <div>\n      {today ? <Main data={today} cover={today.weather[0].main} /> : <Loader />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}